AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sw_api
Parameters:
  S3SnowBucketName:
    Type: String
  S3JSDBucketName:
    Type: String
  Stage:
    Type: String
  LogLevel:
    Type: String
Globals:
  Function:
    Timeout: 60
    Runtime: python3.6
Resources:
# SSM resources
  JiraHostValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/JiraHost"
      Type: String
      Value: NOT_CONFIGURED
  JiraUserIdValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/JiraUserId"
      Type: String
      Value: NOT_CONFIGURED
  JiraAppPasswordValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/JiraAppPassword"
      Type: String
      Value: NOT_CONFIGURED
  JiraCustomerRefNoFieldIdValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/JiraCustomerRefNoFieldId"
      Type: String
      Value: NOT_CONFIGURED
  JiraActualResultFieldIdValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/JiraActualResultFieldId"
      Type: String
      Value: NOT_CONFIGURED
  JiraExpectedResultFieldIdValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/JiraExpectedResultFieldId"
      Type: String
      Value: NOT_CONFIGURED
  JiraEnvironmentFieldIdValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/JiraEnvironmentFieldId"
      Type: String
      Value: NOT_CONFIGURED
  JiraServiceDeskIdValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/JiraServiceDeskId"
      Type: String
      Value: NOT_CONFIGURED
  JiraRequestTypeIdValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/JiraRequestTypeId"
      Type: String
      Value: NOT_CONFIGURED
  SnowHostValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/SnowHost"
      Type: String
      Value: NOT_CONFIGURED
  SnowClientIdValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/SnowClientId"
      Type: String
      Value: NOT_CONFIGURED
  SnowBasicAuthValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/SnowBasicAuth"
      Type: String
      Value: NOT_CONFIGURED
  SnowAuthUserNameValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/SnowAuthUserName"
      Type: String
      Value: NOT_CONFIGURED
  SnowAuthPasswordValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/SnowAuthPassword"
      Type: String
      Value: NOT_CONFIGURED
  SnowAuthUrlValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/SnowAuthUrl"
      Type: String
      Value: NOT_CONFIGURED
  S3PresignUrlTtlValue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${Stage}/S3PresignUrlTtl"
      Type: String
      Value: NOT_CONFIGURED
# Serverless Resources
  S3SnowBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: S3SnowBucketName
  S3JSDBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: S3JSDBucketName
  JiraToSnowApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${Stage}-JiraToSnowApi
      StageName: !Ref Stage
      Auth:
        ApiKeyRequired: true
        UsagePlan: # OPTIONAL
          CreateUsagePlan: PER_API
  SnowToJiraApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${Stage}-SnowToJiraApi
      StageName: !Ref Stage
      Auth:
        ApiKeyRequired: true
        UsagePlan: # OPTIONAL
          CreateUsagePlan: PER_API        
  GetUploadURLFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: s3_presigned_url.handler
      Policies:
        - Statement:
            - Effect: Allow
              Resource: 
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/S3PresignUrlTtl
              Action:
                - ssm:GetParameters
                - ssm:GetParameter
            - Effect: Allow
              Action: s3:*
              Resource:
                - !Sub arn:aws:s3:::${S3SnowBucketName}*
      Environment:
        Variables:
          S3SnowBucket: !Ref S3SnowBucket
          Stage: !Ref Stage
          LogLevel: !Ref LogLevel
      Events:
        S3UploadApi:
          Type: Api
          Properties:
            RestApiId: !Ref SnowToJiraApi
            Auth:
              ApiKeyRequired: true
            Path: /GenerateUploadURL
            Method: get
            RequestParameters:
              - method.request.querystring.issue_key:
                  Required: true
                  Caching: false
              - method.request.querystring.file_name:
                  Required: true
                  Caching: false
  SNOWIncidentCreateToJSD:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: snow_message_processor.handler
      Policies:
        - Statement:
            - Effect: Allow
              Resource: 
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraHost
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraUserId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraAppPassword
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraCustomerRefNoFieldId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraActualResultFieldId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraExpectedResultFieldId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraEnvironmentFieldId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraServiceDeskId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraRequestTypeId
              Action:
                - ssm:GetParameters
                - ssm:GetParameter
      Environment:
        Variables:
          Stage: !Ref Stage
      Events:
        S3UploadApi:
          Type: Api
          Properties:
            RestApiId: !Ref SnowToJiraApi
            Auth:
              ApiKeyRequired: true
            Path: /FSDIncident
            Method: post
  SNOWIncidentUpdateToJSD:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: snow_message_processor.handler
      Policies:
        - Statement:
            - Effect: Allow
              Resource: 
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraHost
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraUserId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraAppPassword
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraCustomerRefNoFieldId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraActualResultFieldId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraExpectedResultFieldId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraEnvironmentFieldId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraServiceDeskId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraRequestTypeId
              Action:
                - ssm:GetParameters
                - ssm:GetParameter
      Environment:
        Variables:
          Stage: !Ref Stage
          LogLevel: !Ref LogLevel
      Events:
        S3UploadApi:
          Type: Api
          Properties:
            RestApiId: !Ref SnowToJiraApi
            Auth:
              ApiKeyRequired: true
            Path: /FSDIncident/{incidentId}
            Method: put
  S3ToJSDFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: s3_to_jsd.handler
      Policies:
        - Statement:
            - Effect: Allow
              Resource: 
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraHost
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraUserId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraAppPassword
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraServiceDeskId
              Action:
                - ssm:GetParameters
                - ssm:GetParameter
            - Effect: Allow
              Action: s3:*
              Resource:
                - !Sub arn:aws:s3:::${S3SnowBucketName}*
      Environment:
        Variables:
          Stage: !Ref Stage
          LogLevel: !Ref LogLevel
      Events:
        JiraUploadTrigger:
          Type: S3
          Properties:
            Bucket:
              Ref: S3SnowBucket
            Events: s3:ObjectCreated:*
  S3ToServiceNow:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: src/
        Handler: s3_to_snow.handler
        Policies:
          - Statement:
              - Effect: Allow
                Resource: 
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowHost
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowClientId
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowAuthUserName
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowAuthPassword
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SNOW_API_TOKEN_KEY_1
                Action:
                  - ssm:GetParameters
                  - ssm:GetParameter
                  - ssm:PutParameter
              - Effect: Allow
                Action: s3:*
                Resource:
                  - !Sub arn:aws:s3:::${S3JSDBucketName}*
        Timeout: 30
        Environment:
          Variables:
            Stage: !Ref Stage
            LogLevel: !Ref LogLevel
        Events:
          SnowUploadTrigger:
            Type: S3
            Properties:
              Bucket:
                Ref: S3JSDBucket
              Events: s3:ObjectCreated:*
  JiraAttachmentToS3:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: src/
        Handler: jsd_to_s3.handler
        Policies:
          - Statement:
            - Effect: Allow
              Resource: 
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraHost
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraUserId
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraAppPassword
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraServiceDeskId
              Action:
                - ssm:GetParameters
                - ssm:GetParameter
            - Effect: Allow
              Action: s3:*
              Resource:
                - !Sub arn:aws:s3:::${S3JSDBucketName}*
        Environment:
          Variables:
            S3_JSD_BUCKET:
              Ref: S3JSDBucket
            Stage: !Ref Stage
            LogLevel: !Ref LogLevel
        Events:
          SnowUploadApi:
            Type: Api
            Properties:
              RestApiId: !Ref JiraToSnowApi
              Auth:
                ApiKeyRequired: true
              Path: /SNOWAttachment
              Method: post
  JiraIssueCreateToSnow:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: jira_message_processor.handler
      Policies:
        - Statement:
          - Effect: Allow
            Resource:
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraHost
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraUserId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraAppPassword
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraCustomerRefNoFieldId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraActualResultFieldId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraExpectedResultFieldId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraEnvironmentFieldId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraServiceDeskId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraRequestTypeId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowHost
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowClientId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowAuthUserName
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowAuthPassword
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowAuthUrl
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SNOW_API_TOKEN_KEY_2
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:PutParameter
      Environment:
        Variables:
          Stage: !Ref Stage
          LogLevel: !Ref LogLevel
      Events:
        SnowUploadApi:
          Type: Api
          Properties:
            RestApiId: !Ref JiraToSnowApi
            Auth:
              ApiKeyRequired: true
            Path: /SNOWIncident
            Method: post
  JiraIssueUpdateToSnow:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: jira_message_processor.handler
      Policies:
        - Statement:
          - Effect: Allow
            Resource: 
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraHost
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraUserId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraAppPassword
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraCustomerRefNoFieldId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraActualResultFieldId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraExpectedResultFieldId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraEnvironmentFieldId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraServiceDeskId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/JiraRequestTypeId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowHost
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowClientId
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowAuthUserName
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowAuthPassword
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SnowAuthUrl
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/SNOW_API_TOKEN_KEY_2
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:PutParameter
      Environment:
        Variables:
          Stage: !Ref Stage
          LogLevel: !Ref LogLevel
      Events:
        SnowUploadApi:
          Type: Api
          Properties:
            RestApiId: !Ref JiraToSnowApi
            Auth:
              ApiKeyRequired: true
            Path: /SNOWIncident/{incidentId}
            Method: put

Outputs:
  GetUploadURLApi:
    Description: "Get an asset pre-signed upload URL"
    Value: !Sub "https://${SnowToJiraApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/GenerateUploadURL"
  JSDTriggerS3Url:
    Description: "Webhook method for JSD"
    Value: !Sub "https://${JiraToSnowApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/SNOWAttachment"
  SnowToJiraApiKeyId:
    Description: "The SnowToJiraApi API key id configured with API Gateway"
    Value: !Sub "${SnowToJiraApiApiKey}"
  JiraToSnowApiKeyId:
    Description: "The JiraToSnowApi API key id configured with API Gateway"
    Value: !Sub "${JiraToSnowApiApiKey}"

